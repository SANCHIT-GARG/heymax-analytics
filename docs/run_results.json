{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.7", "generated_at": "2025-06-21T10:56:48.326878Z", "invocation_id": "e71d0c5d-3872-4310-bfa7-33da5bf878ce", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:47.957177Z", "completed_at": "2025-06-21T10:56:47.964012Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:47.964492Z", "completed_at": "2025-06-21T10:56:47.964504Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008301019668579102, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.stg_events", "compiled": true, "compiled_code": "-- models/staging/stg_events.sql\n\n\n\nSELECT\n    -- Cast and rename raw columns\n    CAST(event_time AS TIMESTAMP) AS event_ts,\n    DATE_TRUNC('day', CAST(event_time AS TIMESTAMP)) AS activity_date,\n    DATE_TRUNC('month', CAST(event_time AS TIMESTAMP)) + INTERVAL '1 month' - INTERVAL '1 day' AS activity_month,\n    DATE_TRUNC('week', CAST(event_time AS TIMESTAMP)) + INTERVAL '6 day' AS activity_week,\n\n    -- User & event info\n    CAST(user_id AS TEXT) AS user_id,\n    event_type,\n    transaction_category,\n    CAST(miles_amount AS DOUBLE) AS miles_amount,\n\n    -- Metadata\n    platform,\n    utm_source,\n    country\nFROM read_csv_auto('data/*.csv')", "relation_name": "\"heymax\".\"main\".\"stg_events\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:47.966778Z", "completed_at": "2025-06-21T10:56:47.969193Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:47.969656Z", "completed_at": "2025-06-21T10:56:47.969665Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004037380218505859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.stg_raw_events", "compiled": true, "compiled_code": "-- models/staging/stg_raw_events.sql\n\n\n\nSELECT *\nFROM read_csv_auto('data/*.csv')", "relation_name": "\"heymax\".\"main\".\"stg_raw_events\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:47.971658Z", "completed_at": "2025-06-21T10:56:47.974286Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:47.974727Z", "completed_at": "2025-06-21T10:56:47.974733Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.003977775573730469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.dim_users", "compiled": true, "compiled_code": "-- models/intermediate/dim_users.sql\n\n\n\n\nSELECT\n    user_id,\n    MIN(event_ts) AS first_seen_ts,\n    MIN(activity_date) as first_seen_date,\n    MIN(activity_month) AS first_seen_month,\n    MIN(activity_week) AS first_seen_week\nFROM \"heymax\".\"main\".\"stg_events\"\nGROUP BY user_id", "relation_name": "\"heymax\".\"main\".\"dim_users\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:47.976988Z", "completed_at": "2025-06-21T10:56:47.979627Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:47.980083Z", "completed_at": "2025-06-21T10:56:47.980090Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004038095474243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.fct_events", "compiled": true, "compiled_code": "-- models/intermediate/fct_events.sql\n\n\n\n-- TODO: Add event filters (e.g., only miles_*), derived metrics later\n\nSELECT\n    event_ts,\n    activity_date,\n    activity_month,\n    activity_week,\n    user_id,\n    event_type,\n    transaction_category,\n    miles_amount,\n    platform,\n    utm_source,\n    country\nFROM \"heymax\".\"main\".\"stg_events\"", "relation_name": "\"heymax\".\"main\".\"fct_events\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:47.982264Z", "completed_at": "2025-06-21T10:56:47.992780Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:47.993191Z", "completed_at": "2025-06-21T10:56:47.993197Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01199793815612793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_stg_events_activity_date.96eb39cbff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_date\nfrom \"heymax\".\"main\".\"stg_events\"\nwhere activity_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:47.995207Z", "completed_at": "2025-06-21T10:56:47.999545Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.000002Z", "completed_at": "2025-06-21T10:56:48.000010Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0057353973388671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_stg_events_activity_month.011e757f2b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_month\nfrom \"heymax\".\"main\".\"stg_events\"\nwhere activity_month is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.002054Z", "completed_at": "2025-06-21T10:56:48.005478Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.005882Z", "completed_at": "2025-06-21T10:56:48.005888Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004730224609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_stg_events_event_ts.085d2fcee0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_ts\nfrom \"heymax\".\"main\".\"stg_events\"\nwhere event_ts is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.007959Z", "completed_at": "2025-06-21T10:56:48.011500Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.011912Z", "completed_at": "2025-06-21T10:56:48.011917Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004930257797241211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_stg_events_event_type.ca8d147ba2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_type\nfrom \"heymax\".\"main\".\"stg_events\"\nwhere event_type is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.013886Z", "completed_at": "2025-06-21T10:56:48.017428Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.017844Z", "completed_at": "2025-06-21T10:56:48.017848Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00485682487487793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_stg_events_user_id.63ec98fbc4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"heymax\".\"main\".\"stg_events\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.019849Z", "completed_at": "2025-06-21T10:56:48.023320Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.023821Z", "completed_at": "2025-06-21T10:56:48.023825Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004930734634399414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_dim_users_first_seen_date.7e4a4de07d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect first_seen_date\nfrom \"heymax\".\"main\".\"dim_users\"\nwhere first_seen_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.025795Z", "completed_at": "2025-06-21T10:56:48.029429Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.029882Z", "completed_at": "2025-06-21T10:56:48.029886Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005028486251831055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_dim_users_first_seen_month.95de0a943c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect first_seen_month\nfrom \"heymax\".\"main\".\"dim_users\"\nwhere first_seen_month is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.031872Z", "completed_at": "2025-06-21T10:56:48.035274Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.035709Z", "completed_at": "2025-06-21T10:56:48.035713Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004736423492431641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_dim_users_first_seen_ts.8399f2399e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect first_seen_ts\nfrom \"heymax\".\"main\".\"dim_users\"\nwhere first_seen_ts is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.037692Z", "completed_at": "2025-06-21T10:56:48.041312Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.041772Z", "completed_at": "2025-06-21T10:56:48.041776Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005041599273681641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_dim_users_first_seen_week.414f47d18d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect first_seen_week\nfrom \"heymax\".\"main\".\"dim_users\"\nwhere first_seen_week is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.043789Z", "completed_at": "2025-06-21T10:56:48.047153Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.047583Z", "completed_at": "2025-06-21T10:56:48.047587Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004723548889160156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_dim_users_user_id.e754bb5812", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"heymax\".\"main\".\"dim_users\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.049516Z", "completed_at": "2025-06-21T10:56:48.054871Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.055311Z", "completed_at": "2025-06-21T10:56:48.055316Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006743192672729492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.unique_dim_users_user_id.bcdc17b9f9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom \"heymax\".\"main\".\"dim_users\"\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.057416Z", "completed_at": "2025-06-21T10:56:48.060170Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.060664Z", "completed_at": "2025-06-21T10:56:48.060668Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00421905517578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.retention_triangle_daily", "compiled": true, "compiled_code": "\n\nWITH base_events AS (\n    SELECT\n        user_id,\n        activity_date\n    FROM \"heymax\".\"main\".\"fct_events\"\n    GROUP BY user_id, activity_date\n),\n\nfirst_seen AS (\n    SELECT\n        user_id,\n        MIN(activity_date) AS cohort_date\n    FROM base_events\n    GROUP BY user_id\n),\n\ncohort_activity AS (\n    SELECT\n        b.user_id,\n        f.cohort_date,\n        b.activity_date,\n        DATE_DIFF('day', f.cohort_date, b.activity_date) AS date_index\n    FROM base_events b\n    JOIN first_seen f ON b.user_id = f.user_id\n    WHERE DATE_DIFF('day', f.cohort_date, b.activity_date) BETWEEN 0 AND 11\n),\n\ndately_counts AS (\n    SELECT\n        cohort_date,\n        date_index,\n        COUNT(DISTINCT user_id) AS users\n    FROM cohort_activity\n    GROUP BY cohort_date, date_index\n),\n\ncohort_sizes AS (\n    SELECT\n        cohort_date,\n        MAX(CASE WHEN date_index = 0 THEN users END) AS cohort_size\n    FROM dately_counts\n    GROUP BY cohort_date\n)\n\nSELECT\n    dc.cohort_date,\n    ROUND(SUM(CASE WHEN dc.date_index = 0 THEN users * 1.0 / cs.cohort_size END), 4) AS d0,\n    ROUND(SUM(CASE WHEN dc.date_index = 1 THEN users * 1.0 / cs.cohort_size END), 4) AS d1,\n    ROUND(SUM(CASE WHEN dc.date_index = 2 THEN users * 1.0 / cs.cohort_size END), 4) AS d2,\n    ROUND(SUM(CASE WHEN dc.date_index = 3 THEN users * 1.0 / cs.cohort_size END), 4) AS d3,\n    ROUND(SUM(CASE WHEN dc.date_index = 4 THEN users * 1.0 / cs.cohort_size END), 4) AS d4,\n    ROUND(SUM(CASE WHEN dc.date_index = 5 THEN users * 1.0 / cs.cohort_size END), 4) AS d5,\n    ROUND(SUM(CASE WHEN dc.date_index = 6 THEN users * 1.0 / cs.cohort_size END), 4) AS d6,\n    ROUND(SUM(CASE WHEN dc.date_index = 7 THEN users * 1.0 / cs.cohort_size END), 4) AS d7,\n    ROUND(SUM(CASE WHEN dc.date_index = 8 THEN users * 1.0 / cs.cohort_size END), 4) AS d8,\n    ROUND(SUM(CASE WHEN dc.date_index = 9 THEN users * 1.0 / cs.cohort_size END), 4) AS d9\nFROM dately_counts dc\nJOIN cohort_sizes cs ON dc.cohort_date = cs.cohort_date\nGROUP BY dc.cohort_date\nORDER BY dc.cohort_date", "relation_name": "\"heymax\".\"main\".\"retention_triangle_daily\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.062720Z", "completed_at": "2025-06-21T10:56:48.065581Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.066023Z", "completed_at": "2025-06-21T10:56:48.066027Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004280567169189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.retention_triangle_monthly", "compiled": true, "compiled_code": "\n\nWITH base_events AS (\n    SELECT\n        user_id,\n        activity_month\n    FROM \"heymax\".\"main\".\"fct_events\"\n    GROUP BY user_id, activity_month\n),\n\nfirst_seen AS (\n    SELECT\n        user_id,\n        MIN(activity_month) AS cohort_month\n    FROM base_events\n    GROUP BY user_id\n),\n\ncohort_activity AS (\n    SELECT\n        b.user_id,\n        f.cohort_month,\n        b.activity_month,\n        DATE_DIFF('month', f.cohort_month, b.activity_month) AS month_index\n    FROM base_events b\n    JOIN first_seen f ON b.user_id = f.user_id\n),\n\nmonthly_counts AS (\n    SELECT\n        cohort_month,\n        month_index,\n        COUNT(DISTINCT user_id) AS users\n    FROM cohort_activity\n    GROUP BY cohort_month, month_index\n),\n\ncohort_sizes AS (\n    SELECT\n        cohort_month,\n        MAX(CASE WHEN month_index = 0 THEN users END) AS cohort_size\n    FROM monthly_counts\n    GROUP BY cohort_month\n)\n\nSELECT\n    mc.cohort_month,\n    ROUND(SUM(CASE WHEN mc.month_index = 0 THEN users * 1.0 / cs.cohort_size END), 4) AS m0,\n    ROUND(SUM(CASE WHEN mc.month_index = 1 THEN users * 1.0 / cs.cohort_size END), 4) AS m1,\n    ROUND(SUM(CASE WHEN mc.month_index = 2 THEN users * 1.0 / cs.cohort_size END), 4) AS m2,\n    ROUND(SUM(CASE WHEN mc.month_index = 3 THEN users * 1.0 / cs.cohort_size END), 4) AS m3,\n    ROUND(SUM(CASE WHEN mc.month_index = 4 THEN users * 1.0 / cs.cohort_size END), 4) AS m4,\n    ROUND(SUM(CASE WHEN mc.month_index = 5 THEN users * 1.0 / cs.cohort_size END), 4) AS m5\nFROM monthly_counts mc\nJOIN cohort_sizes cs ON mc.cohort_month = cs.cohort_month\nGROUP BY mc.cohort_month\nORDER BY mc.cohort_month", "relation_name": "\"heymax\".\"main\".\"retention_triangle_monthly\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.068245Z", "completed_at": "2025-06-21T10:56:48.072176Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.072636Z", "completed_at": "2025-06-21T10:56:48.072640Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005457401275634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.retention_triangle_week", "compiled": true, "compiled_code": "\n\nWITH base_events AS (\n    SELECT\n        user_id,\n        activity_week\n    FROM \"heymax\".\"main\".\"fct_events\"\n    GROUP BY user_id, activity_week\n),\n\nfirst_seen AS (\n    SELECT\n        user_id,\n        MIN(activity_week) AS cohort_week\n    FROM base_events\n    GROUP BY user_id\n),\n\ncohort_activity AS (\n    SELECT\n        b.user_id,\n        f.cohort_week,\n        b.activity_week,\n        DATE_DIFF('week', f.cohort_week, b.activity_week) AS week_index\n    FROM base_events b\n    JOIN first_seen f ON b.user_id = f.user_id\n    WHERE DATE_DIFF('week', f.cohort_week, b.activity_week) BETWEEN 0 AND 11\n),\n\nweekly_counts AS (\n    SELECT\n        cohort_week,\n        week_index,\n        COUNT(DISTINCT user_id) AS users\n    FROM cohort_activity\n    GROUP BY cohort_week, week_index\n),\n\ncohort_sizes AS (\n    SELECT\n        cohort_week,\n        MAX(CASE WHEN week_index = 0 THEN users END) AS cohort_size\n    FROM weekly_counts\n    GROUP BY cohort_week\n)\n\nSELECT\n    wc.cohort_week,\n    ROUND(SUM(CASE WHEN wc.week_index = 0 THEN users * 1.0 / cs.cohort_size END), 4) AS w0,\n    ROUND(SUM(CASE WHEN wc.week_index = 1 THEN users * 1.0 / cs.cohort_size END), 4) AS w1,\n    ROUND(SUM(CASE WHEN wc.week_index = 2 THEN users * 1.0 / cs.cohort_size END), 4) AS w2,\n    ROUND(SUM(CASE WHEN wc.week_index = 3 THEN users * 1.0 / cs.cohort_size END), 4) AS w3,\n    ROUND(SUM(CASE WHEN wc.week_index = 4 THEN users * 1.0 / cs.cohort_size END), 4) AS w4,\n    ROUND(SUM(CASE WHEN wc.week_index = 5 THEN users * 1.0 / cs.cohort_size END), 4) AS w5,\n    ROUND(SUM(CASE WHEN wc.week_index = 6 THEN users * 1.0 / cs.cohort_size END), 4) AS w6,\n    ROUND(SUM(CASE WHEN wc.week_index = 7 THEN users * 1.0 / cs.cohort_size END), 4) AS w7,\n    ROUND(SUM(CASE WHEN wc.week_index = 8 THEN users * 1.0 / cs.cohort_size END), 4) AS w8,\n    ROUND(SUM(CASE WHEN wc.week_index = 9 THEN users * 1.0 / cs.cohort_size END), 4) AS w9,\n    ROUND(SUM(CASE WHEN wc.week_index = 10 THEN users * 1.0 / cs.cohort_size END), 4) AS w10,\n    ROUND(SUM(CASE WHEN wc.week_index = 11 THEN users * 1.0 / cs.cohort_size END), 4) AS w11\nFROM weekly_counts wc\nJOIN cohort_sizes cs ON wc.cohort_week = cs.cohort_week\nGROUP BY wc.cohort_week\nORDER BY wc.cohort_week", "relation_name": "\"heymax\".\"main\".\"retention_triangle_week\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.074815Z", "completed_at": "2025-06-21T10:56:48.078774Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.079222Z", "completed_at": "2025-06-21T10:56:48.079229Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00545501708984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.user_lifecycle_daily", "compiled": true, "compiled_code": "\n\n\nWITH user_dates AS (\n    SELECT DISTINCT user_id, activity_date\n    FROM \"heymax\".\"main\".\"fct_events\"\n),\n\n-- Get all unique dates\nall_dates AS (\n    SELECT DISTINCT activity_date\n    FROM \"heymax\".\"main\".\"fct_events\"\n),\n\n-- Cross join users \u00d7 dates\nuser_date_matrix AS (\n    SELECT u.user_id, m.activity_date\n    FROM (SELECT DISTINCT user_id FROM \"heymax\".\"main\".\"fct_events\") u\n    CROSS JOIN all_dates m\n),\n\n-- Flag user activity by date\nactivity_flags AS (\n    SELECT\n        umm.user_id,\n        umm.activity_date,\n        CASE\n            WHEN uma.user_id IS NOT NULL THEN 1 ELSE 0\n        END AS is_active\n    FROM user_date_matrix umm\n    LEFT JOIN user_dates uma\n        ON umm.user_id = uma.user_id AND umm.activity_date = uma.activity_date\n),\n\n-- Add lagged state\nlifecycle_window AS (\n    SELECT *,\n        LAG(is_active) OVER (PARTITION BY user_id ORDER BY activity_date) AS was_active_last_date,\n        MAX(CASE WHEN is_active = 1 THEN activity_date ELSE NULL END) OVER (\n            PARTITION BY user_id ORDER BY activity_date ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING\n        ) AS last_active_before\n    FROM activity_flags\n),\n\n-- Bring in first seen date\nfirst_seen AS (\n    SELECT user_id, first_seen_date\n    FROM \"heymax\".\"main\".\"dim_users\"\n)\n\n-- Assign lifecycle label\nSELECT\n    lw.user_id,\n    lw.activity_date,\n    CASE\n        WHEN lw.is_active = 1 AND fs.first_seen_date = lw.activity_date THEN 'new'\n        WHEN lw.is_active = 1 AND lw.was_active_last_date = 1 THEN 'retained'\n        WHEN lw.is_active = 1 AND lw.was_active_last_date = 0 AND last_active_before IS NOT NULL THEN 'resurrected'\n        WHEN lw.is_active = 0 AND lw.was_active_last_date = 1 THEN 'churned'\n    END AS user_status\nFROM lifecycle_window lw\nLEFT JOIN first_seen fs ON lw.user_id = fs.user_id\nWHERE user_status IS NOT NULL", "relation_name": "\"heymax\".\"main\".\"user_lifecycle_daily\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.081551Z", "completed_at": "2025-06-21T10:56:48.085479Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.085922Z", "completed_at": "2025-06-21T10:56:48.085926Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005486011505126953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.user_lifecycle_monthly", "compiled": true, "compiled_code": "\n\n\nWITH user_months AS (\n    SELECT DISTINCT user_id, activity_month\n    FROM \"heymax\".\"main\".\"fct_events\"\n),\n\n-- Get all unique months\nall_months AS (\n    SELECT DISTINCT activity_month\n    FROM \"heymax\".\"main\".\"fct_events\"\n),\n\n-- Cross join users \u00d7 months\nuser_month_matrix AS (\n    SELECT u.user_id, m.activity_month\n    FROM (SELECT DISTINCT user_id FROM \"heymax\".\"main\".\"fct_events\") u\n    CROSS JOIN all_months m\n),\n\n-- Flag user activity by month\nactivity_flags AS (\n    SELECT\n        umm.user_id,\n        umm.activity_month,\n        CASE\n            WHEN uma.user_id IS NOT NULL THEN 1 ELSE 0\n        END AS is_active\n    FROM user_month_matrix umm\n    LEFT JOIN user_months uma\n        ON umm.user_id = uma.user_id AND umm.activity_month = uma.activity_month\n),\n\n-- Add lagged state\nlifecycle_window AS (\n    SELECT *,\n        LAG(is_active) OVER (PARTITION BY user_id ORDER BY activity_month) AS was_active_last_month,\n        MAX(CASE WHEN is_active = 1 THEN activity_month ELSE NULL END) OVER (\n            PARTITION BY user_id ORDER BY activity_month ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING\n        ) AS last_active_before\n    FROM activity_flags\n),\n\n-- Bring in first seen month\nfirst_seen AS (\n    SELECT user_id, first_seen_month\n    FROM \"heymax\".\"main\".\"dim_users\"\n)\n\n-- Assign lifecycle label\nSELECT\n    lw.user_id,\n    lw.activity_month,\n    CASE\n        WHEN lw.is_active = 1 AND fs.first_seen_month = lw.activity_month THEN 'new'\n        WHEN lw.is_active = 1 AND lw.was_active_last_month = 1 THEN 'retained'\n        WHEN lw.is_active = 1 AND lw.was_active_last_month = 0 AND last_active_before IS NOT NULL THEN 'resurrected'\n        WHEN lw.is_active = 0 AND lw.was_active_last_month = 1 THEN 'churned'\n    END AS user_status\nFROM lifecycle_window lw\nLEFT JOIN first_seen fs ON lw.user_id = fs.user_id\nWHERE user_status IS NOT NULL", "relation_name": "\"heymax\".\"main\".\"user_lifecycle_monthly\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.088165Z", "completed_at": "2025-06-21T10:56:48.092103Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.092589Z", "completed_at": "2025-06-21T10:56:48.092593Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005417346954345703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.user_lifecycle_week", "compiled": true, "compiled_code": "\n\n\nWITH user_weeks AS (\n    SELECT DISTINCT user_id, activity_week\n    FROM \"heymax\".\"main\".\"fct_events\"\n),\n\n-- Get all unique weeks\nall_weeks AS (\n    SELECT DISTINCT activity_week\n    FROM \"heymax\".\"main\".\"fct_events\"\n),\n\n-- Cross join users \u00d7 weeks\nuser_week_matrix AS (\n    SELECT u.user_id, m.activity_week\n    FROM (SELECT DISTINCT user_id FROM \"heymax\".\"main\".\"fct_events\") u\n    CROSS JOIN all_weeks m\n),\n\n-- Flag user activity by week\nactivity_flags AS (\n    SELECT\n        umm.user_id,\n        umm.activity_week,\n        CASE\n            WHEN uma.user_id IS NOT NULL THEN 1 ELSE 0\n        END AS is_active\n    FROM user_week_matrix umm\n    LEFT JOIN user_weeks uma\n        ON umm.user_id = uma.user_id AND umm.activity_week = uma.activity_week\n),\n\n-- Add lagged state\nlifecycle_window AS (\n    SELECT *,\n        LAG(is_active) OVER (PARTITION BY user_id ORDER BY activity_week) AS was_active_last_week,\n        MAX(CASE WHEN is_active = 1 THEN activity_week ELSE NULL END) OVER (\n            PARTITION BY user_id ORDER BY activity_week ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING\n        ) AS last_active_before\n    FROM activity_flags\n),\n\n-- Bring in first seen week\nfirst_seen AS (\n    SELECT user_id, first_seen_week\n    FROM \"heymax\".\"main\".\"dim_users\"\n)\n\n-- Assign lifecycle label\nSELECT\n    lw.user_id,\n    lw.activity_week,\n    CASE\n        WHEN lw.is_active = 1 AND fs.first_seen_week = lw.activity_week THEN 'new'\n        WHEN lw.is_active = 1 AND lw.was_active_last_week = 1 THEN 'retained'\n        WHEN lw.is_active = 1 AND lw.was_active_last_week = 0 AND last_active_before IS NOT NULL THEN 'resurrected'\n        WHEN lw.is_active = 0 AND lw.was_active_last_week = 1 THEN 'churned'\n    END AS user_status\nFROM lifecycle_window lw\nLEFT JOIN first_seen fs ON lw.user_id = fs.user_id\nWHERE user_status IS NOT NULL", "relation_name": "\"heymax\".\"main\".\"user_lifecycle_week\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.094726Z", "completed_at": "2025-06-21T10:56:48.098238Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.098693Z", "completed_at": "2025-06-21T10:56:48.098697Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004954099655151367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_fct_events_activity_month.05cc8864fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_month\nfrom \"heymax\".\"main\".\"fct_events\"\nwhere activity_month is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.100694Z", "completed_at": "2025-06-21T10:56:48.104179Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.104645Z", "completed_at": "2025-06-21T10:56:48.104650Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004928112030029297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_fct_events_event_ts.e1213e19a4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_ts\nfrom \"heymax\".\"main\".\"fct_events\"\nwhere event_ts is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.106637Z", "completed_at": "2025-06-21T10:56:48.110033Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.110521Z", "completed_at": "2025-06-21T10:56:48.110525Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004781484603881836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_fct_events_event_type.6d7ec5220c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_type\nfrom \"heymax\".\"main\".\"fct_events\"\nwhere event_type is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.112521Z", "completed_at": "2025-06-21T10:56:48.116016Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.116505Z", "completed_at": "2025-06-21T10:56:48.116510Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004887104034423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_fct_events_user_id.4974a207cd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"heymax\".\"main\".\"fct_events\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.118485Z", "completed_at": "2025-06-21T10:56:48.122060Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.122547Z", "completed_at": "2025-06-21T10:56:48.122552Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004956960678100586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_retention_triangle_daily_cohort_date.a68f346160", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cohort_date\nfrom \"heymax\".\"main\".\"retention_triangle_daily\"\nwhere cohort_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.124455Z", "completed_at": "2025-06-21T10:56:48.127737Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.128161Z", "completed_at": "2025-06-21T10:56:48.128166Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004609823226928711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.unique_retention_triangle_daily_cohort_date.5f4ec6cfe8", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    cohort_date as unique_field,\n    count(*) as n_records\n\nfrom \"heymax\".\"main\".\"retention_triangle_daily\"\nwhere cohort_date is not null\ngroup by cohort_date\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.130067Z", "completed_at": "2025-06-21T10:56:48.133739Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.134142Z", "completed_at": "2025-06-21T10:56:48.134146Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00498199462890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_retention_triangle_monthly_cohort_month.63c8e1f90d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cohort_month\nfrom \"heymax\".\"main\".\"retention_triangle_monthly\"\nwhere cohort_month is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.136150Z", "completed_at": "2025-06-21T10:56:48.139615Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.140072Z", "completed_at": "2025-06-21T10:56:48.140076Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004895210266113281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.unique_retention_triangle_monthly_cohort_month.c40561fbd5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    cohort_month as unique_field,\n    count(*) as n_records\n\nfrom \"heymax\".\"main\".\"retention_triangle_monthly\"\nwhere cohort_month is not null\ngroup by cohort_month\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.142209Z", "completed_at": "2025-06-21T10:56:48.146925Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.147327Z", "completed_at": "2025-06-21T10:56:48.147331Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0061931610107421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_retention_triangle_week_cohort_week.4615a9eab4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cohort_week\nfrom \"heymax\".\"main\".\"retention_triangle_week\"\nwhere cohort_week is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.149417Z", "completed_at": "2025-06-21T10:56:48.152982Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.153471Z", "completed_at": "2025-06-21T10:56:48.153476Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0050201416015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.unique_retention_triangle_week_cohort_week.924606c0e0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    cohort_week as unique_field,\n    count(*) as n_records\n\nfrom \"heymax\".\"main\".\"retention_triangle_week\"\nwhere cohort_week is not null\ngroup by cohort_week\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.155481Z", "completed_at": "2025-06-21T10:56:48.157905Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.158338Z", "completed_at": "2025-06-21T10:56:48.158360Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0038466453552246094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.growth_metrics_daily", "compiled": true, "compiled_code": "\n\nWITH metrics AS (\n    SELECT\n        activity_date,\n        COUNT_IF(user_status = 'new') AS new_users,\n        COUNT_IF(user_status = 'retained') AS retained_users,\n        COUNT_IF(user_status = 'resurrected') AS resurrected_users,\n        COUNT_IF(user_status = 'churned') AS churned_users,\n        COUNT_IF(user_status IN ('new', 'retained', 'resurrected')) AS active_users\n    FROM \"heymax\".\"main\".\"user_lifecycle_daily\"\n    GROUP BY activity_date\n),\n\n-- Add lag to compute retention rate\nwith_lagged AS (\n    SELECT\n        m.*,\n        LAG(active_users) OVER (ORDER BY activity_date) AS active_users_last_date\n    FROM metrics m\n)\n\nSELECT\n    activity_date,\n    new_users,\n    retained_users,\n    resurrected_users,\n    churned_users,\n    active_users,\n\n    -- Retention rate = retained / previous active users\n    CASE\n        WHEN active_users_last_date = 0 THEN NULL\n        ELSE retained_users * 1.0 / active_users_last_date\n    END AS retention_rate,\n\n    -- Quick ratio = (new + resurrected) / churned\n    CASE\n        WHEN churned_users = 0 THEN NULL\n        ELSE (new_users + resurrected_users) * 1.0 / churned_users\n    END AS quick_ratio\n\nFROM with_lagged\nORDER BY activity_date", "relation_name": "\"heymax\".\"main\".\"growth_metrics_daily\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.160593Z", "completed_at": "2025-06-21T10:56:48.169430Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.169922Z", "completed_at": "2025-06-21T10:56:48.169927Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010338544845581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.accepted_values_user_lifecycle_daily_user_status__new__retained__resurrected__churned.bc13a0a6d4", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        user_status as value_field,\n        count(*) as n_records\n\n    from \"heymax\".\"main\".\"user_lifecycle_daily\"\n    group by user_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'new','retained','resurrected','churned'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.172054Z", "completed_at": "2025-06-21T10:56:48.175749Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.176199Z", "completed_at": "2025-06-21T10:56:48.176204Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0051953792572021484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_daily_activity_date.2e71a59a04", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_date\nfrom \"heymax\".\"main\".\"user_lifecycle_daily\"\nwhere activity_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.178287Z", "completed_at": "2025-06-21T10:56:48.181932Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.182419Z", "completed_at": "2025-06-21T10:56:48.182423Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005075931549072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_daily_user_id.b72d573c7c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"heymax\".\"main\".\"user_lifecycle_daily\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.184478Z", "completed_at": "2025-06-21T10:56:48.188084Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.188574Z", "completed_at": "2025-06-21T10:56:48.188579Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0050640106201171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_daily_user_status.8acd3a1e58", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_status\nfrom \"heymax\".\"main\".\"user_lifecycle_daily\"\nwhere user_status is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.190639Z", "completed_at": "2025-06-21T10:56:48.193276Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.193774Z", "completed_at": "2025-06-21T10:56:48.193778Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004103899002075195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.growth_metrics_monthly", "compiled": true, "compiled_code": "\n\n\nWITH metrics AS (\n    SELECT\n        activity_month,\n        COUNT_IF(user_status = 'new') AS new_users,\n        COUNT_IF(user_status = 'retained') AS retained_users,\n        COUNT_IF(user_status = 'resurrected') AS resurrected_users,\n        COUNT_IF(user_status = 'churned') AS churned_users,\n        COUNT_IF(user_status IN ('new', 'retained', 'resurrected')) AS active_users\n    FROM \"heymax\".\"main\".\"user_lifecycle_monthly\"\n    GROUP BY activity_month\n),\n\n-- Add lag to compute retention rate\nwith_lagged AS (\n    SELECT\n        m.*,\n        LAG(active_users) OVER (ORDER BY activity_month) AS active_users_last_month\n    FROM metrics m\n)\n\nSELECT\n    activity_month,\n    new_users,\n    retained_users,\n    resurrected_users,\n    churned_users,\n    active_users,\n\n    -- Retention rate = retained / previous active users\n    CASE\n        WHEN active_users_last_month = 0 THEN NULL\n        ELSE retained_users * 1.0 / active_users_last_month\n    END AS retention_rate,\n\n    -- Quick ratio = (new + resurrected) / churned\n    CASE\n        WHEN churned_users = 0 THEN NULL\n        ELSE (new_users + resurrected_users) * 1.0 / churned_users\n    END AS quick_ratio\n\nFROM with_lagged\nORDER BY activity_month", "relation_name": "\"heymax\".\"main\".\"growth_metrics_monthly\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.195949Z", "completed_at": "2025-06-21T10:56:48.199814Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.200297Z", "completed_at": "2025-06-21T10:56:48.200302Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005471944808959961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.accepted_values_user_lifecycle_monthly_user_status__new__retained__resurrected__churned.01b3a681fe", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        user_status as value_field,\n        count(*) as n_records\n\n    from \"heymax\".\"main\".\"user_lifecycle_monthly\"\n    group by user_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'new','retained','resurrected','churned'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.202468Z", "completed_at": "2025-06-21T10:56:48.206093Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.206581Z", "completed_at": "2025-06-21T10:56:48.206586Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005158662796020508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_monthly_activity_month.fdc43f3f94", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_month\nfrom \"heymax\".\"main\".\"user_lifecycle_monthly\"\nwhere activity_month is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.208642Z", "completed_at": "2025-06-21T10:56:48.212318Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.212784Z", "completed_at": "2025-06-21T10:56:48.212788Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005146980285644531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_monthly_user_id.d5fd2c8fd5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"heymax\".\"main\".\"user_lifecycle_monthly\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.214895Z", "completed_at": "2025-06-21T10:56:48.219962Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.220443Z", "completed_at": "2025-06-21T10:56:48.220448Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0065271854400634766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_monthly_user_status.50fb109ddf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_status\nfrom \"heymax\".\"main\".\"user_lifecycle_monthly\"\nwhere user_status is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.222493Z", "completed_at": "2025-06-21T10:56:48.261950Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.262455Z", "completed_at": "2025-06-21T10:56:48.262460Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.040944576263427734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.growth_metrics_week", "compiled": true, "compiled_code": "\n\n\nWITH metrics AS (\n    SELECT\n        activity_week,\n        COUNT_IF(user_status = 'new') AS new_users,\n        COUNT_IF(user_status = 'retained') AS retained_users,\n        COUNT_IF(user_status = 'resurrected') AS resurrected_users,\n        COUNT_IF(user_status = 'churned') AS churned_users,\n        COUNT_IF(user_status IN ('new', 'retained', 'resurrected')) AS active_users\n    FROM \"heymax\".\"main\".\"user_lifecycle_week\"\n    GROUP BY activity_week\n),\n\n-- Add lag to compute retention rate\nwith_lagged AS (\n    SELECT\n        m.*,\n        LAG(active_users) OVER (ORDER BY activity_week) AS active_users_last_week\n    FROM metrics m\n)\n\nSELECT\n    activity_week,\n    new_users,\n    retained_users,\n    resurrected_users,\n    churned_users,\n    active_users,\n\n    -- Retention rate = retained / previous active users\n    CASE\n        WHEN active_users_last_week = 0 THEN NULL\n        ELSE retained_users * 1.0 / active_users_last_week\n    END AS retention_rate,\n\n    -- Quick ratio = (new + resurrected) / churned\n    CASE\n        WHEN churned_users = 0 THEN NULL\n        ELSE (new_users + resurrected_users) * 1.0 / churned_users\n    END AS quick_ratio\n\nFROM with_lagged\nORDER BY activity_week", "relation_name": "\"heymax\".\"main\".\"growth_metrics_week\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.264561Z", "completed_at": "2025-06-21T10:56:48.268714Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.269165Z", "completed_at": "2025-06-21T10:56:48.269169Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005595207214355469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.accepted_values_user_lifecycle_week_user_status__new__retained__resurrected__churned.fc713538b6", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        user_status as value_field,\n        count(*) as n_records\n\n    from \"heymax\".\"main\".\"user_lifecycle_week\"\n    group by user_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'new','retained','resurrected','churned'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.271273Z", "completed_at": "2025-06-21T10:56:48.274984Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.275482Z", "completed_at": "2025-06-21T10:56:48.275487Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005150794982910156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_week_activity_week.bf742d6371", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_week\nfrom \"heymax\".\"main\".\"user_lifecycle_week\"\nwhere activity_week is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.277562Z", "completed_at": "2025-06-21T10:56:48.281285Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.281748Z", "completed_at": "2025-06-21T10:56:48.281752Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005154609680175781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_week_user_id.6db8145058", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"heymax\".\"main\".\"user_lifecycle_week\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.283819Z", "completed_at": "2025-06-21T10:56:48.287493Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.287969Z", "completed_at": "2025-06-21T10:56:48.287973Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0051271915435791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_week_user_status.37f532b99f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_status\nfrom \"heymax\".\"main\".\"user_lifecycle_week\"\nwhere user_status is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.290025Z", "completed_at": "2025-06-21T10:56:48.293663Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.294103Z", "completed_at": "2025-06-21T10:56:48.294107Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005034446716308594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_growth_metrics_daily_activity_date.8596682f98", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_date\nfrom \"heymax\".\"main\".\"growth_metrics_daily\"\nwhere activity_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.296118Z", "completed_at": "2025-06-21T10:56:48.299705Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.300113Z", "completed_at": "2025-06-21T10:56:48.300117Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004920482635498047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.unique_growth_metrics_daily_activity_date.0668564552", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    activity_date as unique_field,\n    count(*) as n_records\n\nfrom \"heymax\".\"main\".\"growth_metrics_daily\"\nwhere activity_date is not null\ngroup by activity_date\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.302221Z", "completed_at": "2025-06-21T10:56:48.305786Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.306192Z", "completed_at": "2025-06-21T10:56:48.306196Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005008697509765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_growth_metrics_monthly_activity_month.fafe41103e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_month\nfrom \"heymax\".\"main\".\"growth_metrics_monthly\"\nwhere activity_month is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.308192Z", "completed_at": "2025-06-21T10:56:48.311726Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.312209Z", "completed_at": "2025-06-21T10:56:48.312213Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004982709884643555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.unique_growth_metrics_monthly_activity_month.989c04fb77", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    activity_month as unique_field,\n    count(*) as n_records\n\nfrom \"heymax\".\"main\".\"growth_metrics_monthly\"\nwhere activity_month is not null\ngroup by activity_month\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.314286Z", "completed_at": "2025-06-21T10:56:48.317949Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.318434Z", "completed_at": "2025-06-21T10:56:48.318439Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005097866058349609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_growth_metrics_week_activity_week.c92f568e72", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_week\nfrom \"heymax\".\"main\".\"growth_metrics_week\"\nwhere activity_week is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T10:56:48.320515Z", "completed_at": "2025-06-21T10:56:48.324156Z"}, {"name": "execute", "started_at": "2025-06-21T10:56:48.324618Z", "completed_at": "2025-06-21T10:56:48.324623Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005066633224487305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.unique_growth_metrics_week_activity_week.69f878f821", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    activity_week as unique_field,\n    count(*) as n_records\n\nfrom \"heymax\".\"main\".\"growth_metrics_week\"\nwhere activity_week is not null\ngroup by activity_week\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 0.44570279121398926, "args": {"defer": false, "enable_legacy_logger": false, "which": "generate", "strict_mode": false, "static": false, "static_parser": true, "cache_selected_only": false, "partial_parse": true, "use_colors_file": true, "printer_width": 80, "indirect_selection": "eager", "quiet": false, "macro_debugging": false, "log_path": "/home/runner/work/heymax-analytics/heymax-analytics/heymax_analytics/logs", "warn_error_options": {"include": [], "exclude": []}, "profiles_dir": ".", "log_format": "default", "select": [], "populate_cache": true, "require_explicit_package_overrides_for_builtin_materializations": true, "use_colors": true, "source_freshness_run_project_hooks": false, "compile": true, "log_level": "info", "empty_catalog": false, "require_resource_names_without_spaces": false, "vars": {}, "introspect": true, "exclude": [], "partial_parse_file_diff": true, "log_format_file": "debug", "project_dir": "/home/runner/work/heymax-analytics/heymax-analytics/heymax_analytics", "log_file_max_bytes": 10485760, "show_resource_report": false, "log_level_file": "debug", "write_json": true, "version_check": true, "invocation_command": "dbt docs generate --profiles-dir .", "print": true, "send_anonymous_usage_stats": true, "favor_state": false}}