{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.7", "generated_at": "2025-06-21T11:02:09.292060Z", "invocation_id": "85ff088a-1ab7-46d1-a32d-37be16549991", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.693713Z", "completed_at": "2025-06-21T11:02:08.704481Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.705214Z", "completed_at": "2025-06-21T11:02:08.705233Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.012812614440917969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.stg_events", "compiled": true, "compiled_code": "-- models/staging/stg_events.sql\n\n\n\nSELECT\n    -- Cast and rename raw columns\n    CAST(event_time AS TIMESTAMP) AS event_ts,\n    DATE_TRUNC('day', CAST(event_time AS TIMESTAMP)) AS activity_date,\n    DATE_TRUNC('month', CAST(event_time AS TIMESTAMP)) + INTERVAL '1 month' - INTERVAL '1 day' AS activity_month,\n    DATE_TRUNC('week', CAST(event_time AS TIMESTAMP)) + INTERVAL '6 day' AS activity_week,\n\n    -- User & event info\n    CAST(user_id AS TEXT) AS user_id,\n    event_type,\n    transaction_category,\n    CAST(miles_amount AS DOUBLE) AS miles_amount,\n\n    -- Metadata\n    platform,\n    utm_source,\n    country\nFROM read_csv_auto('data/*.csv')", "relation_name": "\"heymax\".\"main\".\"stg_events\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.708358Z", "completed_at": "2025-06-21T11:02:08.711952Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.712422Z", "completed_at": "2025-06-21T11:02:08.712430Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005429744720458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.stg_raw_events", "compiled": true, "compiled_code": "-- models/staging/stg_raw_events.sql\n\n\n\nSELECT *\nFROM read_csv_auto('data/*.csv')", "relation_name": "\"heymax\".\"main\".\"stg_raw_events\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.714717Z", "completed_at": "2025-06-21T11:02:08.718808Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.719355Z", "completed_at": "2025-06-21T11:02:08.719368Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005698204040527344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.dim_users", "compiled": true, "compiled_code": "-- models/intermediate/dim_users.sql\n\n\n\n\nSELECT\n    user_id,\n    MIN(event_ts) AS first_seen_ts,\n    MIN(activity_date) as first_seen_date,\n    MIN(activity_month) AS first_seen_month,\n    MIN(activity_week) AS first_seen_week\nFROM \"heymax\".\"main\".\"stg_events\"\nGROUP BY user_id", "relation_name": "\"heymax\".\"main\".\"dim_users\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.721902Z", "completed_at": "2025-06-21T11:02:08.741950Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.743080Z", "completed_at": "2025-06-21T11:02:08.743102Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022495031356811523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.fct_events", "compiled": true, "compiled_code": "-- models/intermediate/fct_events.sql\n\n\n\n-- TODO: Add event filters (e.g., only miles_*), derived metrics later\n\nSELECT\n    event_ts,\n    activity_date,\n    activity_month,\n    activity_week,\n    user_id,\n    event_type,\n    transaction_category,\n    miles_amount,\n    platform,\n    utm_source,\n    country\nFROM \"heymax\".\"main\".\"stg_events\"", "relation_name": "\"heymax\".\"main\".\"fct_events\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.746098Z", "completed_at": "2025-06-21T11:02:08.805366Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.806450Z", "completed_at": "2025-06-21T11:02:08.806463Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06186318397521973, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_stg_events_activity_date.96eb39cbff", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_date\nfrom \"heymax\".\"main\".\"stg_events\"\nwhere activity_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.809831Z", "completed_at": "2025-06-21T11:02:08.819128Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.819650Z", "completed_at": "2025-06-21T11:02:08.819661Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011399984359741211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_stg_events_activity_month.011e757f2b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_month\nfrom \"heymax\".\"main\".\"stg_events\"\nwhere activity_month is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.821877Z", "completed_at": "2025-06-21T11:02:08.826075Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.826527Z", "completed_at": "2025-06-21T11:02:08.826534Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005622386932373047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_stg_events_event_ts.085d2fcee0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_ts\nfrom \"heymax\".\"main\".\"stg_events\"\nwhere event_ts is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.828679Z", "completed_at": "2025-06-21T11:02:08.832521Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.832965Z", "completed_at": "2025-06-21T11:02:08.832990Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005362749099731445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_stg_events_event_type.ca8d147ba2", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_type\nfrom \"heymax\".\"main\".\"stg_events\"\nwhere event_type is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.835120Z", "completed_at": "2025-06-21T11:02:08.838872Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.839350Z", "completed_at": "2025-06-21T11:02:08.839355Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005210161209106445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_stg_events_user_id.63ec98fbc4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"heymax\".\"main\".\"stg_events\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.841470Z", "completed_at": "2025-06-21T11:02:08.845334Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.845844Z", "completed_at": "2025-06-21T11:02:08.845849Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005407094955444336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_dim_users_first_seen_date.7e4a4de07d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect first_seen_date\nfrom \"heymax\".\"main\".\"dim_users\"\nwhere first_seen_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.847936Z", "completed_at": "2025-06-21T11:02:08.950092Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.950996Z", "completed_at": "2025-06-21T11:02:08.951007Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.1041104793548584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_dim_users_first_seen_month.95de0a943c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect first_seen_month\nfrom \"heymax\".\"main\".\"dim_users\"\nwhere first_seen_month is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.954166Z", "completed_at": "2025-06-21T11:02:08.958864Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.959333Z", "completed_at": "2025-06-21T11:02:08.959339Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006586551666259766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_dim_users_first_seen_ts.8399f2399e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect first_seen_ts\nfrom \"heymax\".\"main\".\"dim_users\"\nwhere first_seen_ts is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.961775Z", "completed_at": "2025-06-21T11:02:08.965859Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.966331Z", "completed_at": "2025-06-21T11:02:08.966338Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005708932876586914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_dim_users_first_seen_week.414f47d18d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect first_seen_week\nfrom \"heymax\".\"main\".\"dim_users\"\nwhere first_seen_week is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.968514Z", "completed_at": "2025-06-21T11:02:08.972732Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.973202Z", "completed_at": "2025-06-21T11:02:08.973209Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005771636962890625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_dim_users_user_id.e754bb5812", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"heymax\".\"main\".\"dim_users\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.975319Z", "completed_at": "2025-06-21T11:02:08.981392Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.981833Z", "completed_at": "2025-06-21T11:02:08.981840Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007508039474487305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.unique_dim_users_user_id.bcdc17b9f9", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom \"heymax\".\"main\".\"dim_users\"\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.984017Z", "completed_at": "2025-06-21T11:02:08.987170Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.987631Z", "completed_at": "2025-06-21T11:02:08.987638Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0046427249908447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.retention_triangle_daily", "compiled": true, "compiled_code": "\n\nWITH base_events AS (\n    SELECT\n        user_id,\n        activity_date\n    FROM \"heymax\".\"main\".\"fct_events\"\n    GROUP BY user_id, activity_date\n),\n\nfirst_seen AS (\n    SELECT\n        user_id,\n        MIN(activity_date) AS cohort_date\n    FROM base_events\n    GROUP BY user_id\n),\n\ncohort_activity AS (\n    SELECT\n        b.user_id,\n        f.cohort_date,\n        b.activity_date,\n        DATE_DIFF('day', f.cohort_date, b.activity_date) AS date_index\n    FROM base_events b\n    JOIN first_seen f ON b.user_id = f.user_id\n    WHERE DATE_DIFF('day', f.cohort_date, b.activity_date) BETWEEN 0 AND 11\n),\n\ndately_counts AS (\n    SELECT\n        cohort_date,\n        date_index,\n        COUNT(DISTINCT user_id) AS users\n    FROM cohort_activity\n    GROUP BY cohort_date, date_index\n),\n\ncohort_sizes AS (\n    SELECT\n        cohort_date,\n        MAX(CASE WHEN date_index = 0 THEN users END) AS cohort_size\n    FROM dately_counts\n    GROUP BY cohort_date\n)\n\nSELECT\n    dc.cohort_date,\n    ROUND(SUM(CASE WHEN dc.date_index = 0 THEN users * 1.0 / cs.cohort_size END), 4) AS d0,\n    ROUND(SUM(CASE WHEN dc.date_index = 1 THEN users * 1.0 / cs.cohort_size END), 4) AS d1,\n    ROUND(SUM(CASE WHEN dc.date_index = 2 THEN users * 1.0 / cs.cohort_size END), 4) AS d2,\n    ROUND(SUM(CASE WHEN dc.date_index = 3 THEN users * 1.0 / cs.cohort_size END), 4) AS d3,\n    ROUND(SUM(CASE WHEN dc.date_index = 4 THEN users * 1.0 / cs.cohort_size END), 4) AS d4,\n    ROUND(SUM(CASE WHEN dc.date_index = 5 THEN users * 1.0 / cs.cohort_size END), 4) AS d5,\n    ROUND(SUM(CASE WHEN dc.date_index = 6 THEN users * 1.0 / cs.cohort_size END), 4) AS d6,\n    ROUND(SUM(CASE WHEN dc.date_index = 7 THEN users * 1.0 / cs.cohort_size END), 4) AS d7,\n    ROUND(SUM(CASE WHEN dc.date_index = 8 THEN users * 1.0 / cs.cohort_size END), 4) AS d8,\n    ROUND(SUM(CASE WHEN dc.date_index = 9 THEN users * 1.0 / cs.cohort_size END), 4) AS d9\nFROM dately_counts dc\nJOIN cohort_sizes cs ON dc.cohort_date = cs.cohort_date\nGROUP BY dc.cohort_date\nORDER BY dc.cohort_date", "relation_name": "\"heymax\".\"main\".\"retention_triangle_daily\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.989993Z", "completed_at": "2025-06-21T11:02:08.993030Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:08.993471Z", "completed_at": "2025-06-21T11:02:08.993477Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004622697830200195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.retention_triangle_monthly", "compiled": true, "compiled_code": "\n\nWITH base_events AS (\n    SELECT\n        user_id,\n        activity_month\n    FROM \"heymax\".\"main\".\"fct_events\"\n    GROUP BY user_id, activity_month\n),\n\nfirst_seen AS (\n    SELECT\n        user_id,\n        MIN(activity_month) AS cohort_month\n    FROM base_events\n    GROUP BY user_id\n),\n\ncohort_activity AS (\n    SELECT\n        b.user_id,\n        f.cohort_month,\n        b.activity_month,\n        DATE_DIFF('month', f.cohort_month, b.activity_month) AS month_index\n    FROM base_events b\n    JOIN first_seen f ON b.user_id = f.user_id\n),\n\nmonthly_counts AS (\n    SELECT\n        cohort_month,\n        month_index,\n        COUNT(DISTINCT user_id) AS users\n    FROM cohort_activity\n    GROUP BY cohort_month, month_index\n),\n\ncohort_sizes AS (\n    SELECT\n        cohort_month,\n        MAX(CASE WHEN month_index = 0 THEN users END) AS cohort_size\n    FROM monthly_counts\n    GROUP BY cohort_month\n)\n\nSELECT\n    mc.cohort_month,\n    ROUND(SUM(CASE WHEN mc.month_index = 0 THEN users * 1.0 / cs.cohort_size END), 4) AS m0,\n    ROUND(SUM(CASE WHEN mc.month_index = 1 THEN users * 1.0 / cs.cohort_size END), 4) AS m1,\n    ROUND(SUM(CASE WHEN mc.month_index = 2 THEN users * 1.0 / cs.cohort_size END), 4) AS m2,\n    ROUND(SUM(CASE WHEN mc.month_index = 3 THEN users * 1.0 / cs.cohort_size END), 4) AS m3,\n    ROUND(SUM(CASE WHEN mc.month_index = 4 THEN users * 1.0 / cs.cohort_size END), 4) AS m4,\n    ROUND(SUM(CASE WHEN mc.month_index = 5 THEN users * 1.0 / cs.cohort_size END), 4) AS m5\nFROM monthly_counts mc\nJOIN cohort_sizes cs ON mc.cohort_month = cs.cohort_month\nGROUP BY mc.cohort_month\nORDER BY mc.cohort_month", "relation_name": "\"heymax\".\"main\".\"retention_triangle_monthly\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:08.995684Z", "completed_at": "2025-06-21T11:02:09.000304Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.000751Z", "completed_at": "2025-06-21T11:02:09.000756Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006067037582397461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.retention_triangle_week", "compiled": true, "compiled_code": "\n\nWITH base_events AS (\n    SELECT\n        user_id,\n        activity_week\n    FROM \"heymax\".\"main\".\"fct_events\"\n    GROUP BY user_id, activity_week\n),\n\nfirst_seen AS (\n    SELECT\n        user_id,\n        MIN(activity_week) AS cohort_week\n    FROM base_events\n    GROUP BY user_id\n),\n\ncohort_activity AS (\n    SELECT\n        b.user_id,\n        f.cohort_week,\n        b.activity_week,\n        DATE_DIFF('week', f.cohort_week, b.activity_week) AS week_index\n    FROM base_events b\n    JOIN first_seen f ON b.user_id = f.user_id\n    WHERE DATE_DIFF('week', f.cohort_week, b.activity_week) BETWEEN 0 AND 11\n),\n\nweekly_counts AS (\n    SELECT\n        cohort_week,\n        week_index,\n        COUNT(DISTINCT user_id) AS users\n    FROM cohort_activity\n    GROUP BY cohort_week, week_index\n),\n\ncohort_sizes AS (\n    SELECT\n        cohort_week,\n        MAX(CASE WHEN week_index = 0 THEN users END) AS cohort_size\n    FROM weekly_counts\n    GROUP BY cohort_week\n)\n\nSELECT\n    wc.cohort_week,\n    ROUND(SUM(CASE WHEN wc.week_index = 0 THEN users * 1.0 / cs.cohort_size END), 4) AS w0,\n    ROUND(SUM(CASE WHEN wc.week_index = 1 THEN users * 1.0 / cs.cohort_size END), 4) AS w1,\n    ROUND(SUM(CASE WHEN wc.week_index = 2 THEN users * 1.0 / cs.cohort_size END), 4) AS w2,\n    ROUND(SUM(CASE WHEN wc.week_index = 3 THEN users * 1.0 / cs.cohort_size END), 4) AS w3,\n    ROUND(SUM(CASE WHEN wc.week_index = 4 THEN users * 1.0 / cs.cohort_size END), 4) AS w4,\n    ROUND(SUM(CASE WHEN wc.week_index = 5 THEN users * 1.0 / cs.cohort_size END), 4) AS w5,\n    ROUND(SUM(CASE WHEN wc.week_index = 6 THEN users * 1.0 / cs.cohort_size END), 4) AS w6,\n    ROUND(SUM(CASE WHEN wc.week_index = 7 THEN users * 1.0 / cs.cohort_size END), 4) AS w7,\n    ROUND(SUM(CASE WHEN wc.week_index = 8 THEN users * 1.0 / cs.cohort_size END), 4) AS w8,\n    ROUND(SUM(CASE WHEN wc.week_index = 9 THEN users * 1.0 / cs.cohort_size END), 4) AS w9,\n    ROUND(SUM(CASE WHEN wc.week_index = 10 THEN users * 1.0 / cs.cohort_size END), 4) AS w10,\n    ROUND(SUM(CASE WHEN wc.week_index = 11 THEN users * 1.0 / cs.cohort_size END), 4) AS w11\nFROM weekly_counts wc\nJOIN cohort_sizes cs ON wc.cohort_week = cs.cohort_week\nGROUP BY wc.cohort_week\nORDER BY wc.cohort_week", "relation_name": "\"heymax\".\"main\".\"retention_triangle_week\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.003337Z", "completed_at": "2025-06-21T11:02:09.007615Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.008076Z", "completed_at": "2025-06-21T11:02:09.008082Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005880594253540039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.user_lifecycle_daily", "compiled": true, "compiled_code": "\n\n\nWITH user_dates AS (\n    SELECT DISTINCT user_id, activity_date\n    FROM \"heymax\".\"main\".\"fct_events\"\n),\n\n-- Get all unique dates\nall_dates AS (\n    SELECT DISTINCT activity_date\n    FROM \"heymax\".\"main\".\"fct_events\"\n),\n\n-- Cross join users \u00d7 dates\nuser_date_matrix AS (\n    SELECT u.user_id, m.activity_date\n    FROM (SELECT DISTINCT user_id FROM \"heymax\".\"main\".\"fct_events\") u\n    CROSS JOIN all_dates m\n),\n\n-- Flag user activity by date\nactivity_flags AS (\n    SELECT\n        umm.user_id,\n        umm.activity_date,\n        CASE\n            WHEN uma.user_id IS NOT NULL THEN 1 ELSE 0\n        END AS is_active\n    FROM user_date_matrix umm\n    LEFT JOIN user_dates uma\n        ON umm.user_id = uma.user_id AND umm.activity_date = uma.activity_date\n),\n\n-- Add lagged state\nlifecycle_window AS (\n    SELECT *,\n        LAG(is_active) OVER (PARTITION BY user_id ORDER BY activity_date) AS was_active_last_date,\n        MAX(CASE WHEN is_active = 1 THEN activity_date ELSE NULL END) OVER (\n            PARTITION BY user_id ORDER BY activity_date ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING\n        ) AS last_active_before\n    FROM activity_flags\n),\n\n-- Bring in first seen date\nfirst_seen AS (\n    SELECT user_id, first_seen_date\n    FROM \"heymax\".\"main\".\"dim_users\"\n)\n\n-- Assign lifecycle label\nSELECT\n    lw.user_id,\n    lw.activity_date,\n    CASE\n        WHEN lw.is_active = 1 AND fs.first_seen_date = lw.activity_date THEN 'new'\n        WHEN lw.is_active = 1 AND lw.was_active_last_date = 1 THEN 'retained'\n        WHEN lw.is_active = 1 AND lw.was_active_last_date = 0 AND last_active_before IS NOT NULL THEN 'resurrected'\n        WHEN lw.is_active = 0 AND lw.was_active_last_date = 1 THEN 'churned'\n    END AS user_status\nFROM lifecycle_window lw\nLEFT JOIN first_seen fs ON lw.user_id = fs.user_id\nWHERE user_status IS NOT NULL", "relation_name": "\"heymax\".\"main\".\"user_lifecycle_daily\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.010667Z", "completed_at": "2025-06-21T11:02:09.014786Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.015251Z", "completed_at": "2025-06-21T11:02:09.015256Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005665779113769531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.user_lifecycle_monthly", "compiled": true, "compiled_code": "\n\n\nWITH user_months AS (\n    SELECT DISTINCT user_id, activity_month\n    FROM \"heymax\".\"main\".\"fct_events\"\n),\n\n-- Get all unique months\nall_months AS (\n    SELECT DISTINCT activity_month\n    FROM \"heymax\".\"main\".\"fct_events\"\n),\n\n-- Cross join users \u00d7 months\nuser_month_matrix AS (\n    SELECT u.user_id, m.activity_month\n    FROM (SELECT DISTINCT user_id FROM \"heymax\".\"main\".\"fct_events\") u\n    CROSS JOIN all_months m\n),\n\n-- Flag user activity by month\nactivity_flags AS (\n    SELECT\n        umm.user_id,\n        umm.activity_month,\n        CASE\n            WHEN uma.user_id IS NOT NULL THEN 1 ELSE 0\n        END AS is_active\n    FROM user_month_matrix umm\n    LEFT JOIN user_months uma\n        ON umm.user_id = uma.user_id AND umm.activity_month = uma.activity_month\n),\n\n-- Add lagged state\nlifecycle_window AS (\n    SELECT *,\n        LAG(is_active) OVER (PARTITION BY user_id ORDER BY activity_month) AS was_active_last_month,\n        MAX(CASE WHEN is_active = 1 THEN activity_month ELSE NULL END) OVER (\n            PARTITION BY user_id ORDER BY activity_month ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING\n        ) AS last_active_before\n    FROM activity_flags\n),\n\n-- Bring in first seen month\nfirst_seen AS (\n    SELECT user_id, first_seen_month\n    FROM \"heymax\".\"main\".\"dim_users\"\n)\n\n-- Assign lifecycle label\nSELECT\n    lw.user_id,\n    lw.activity_month,\n    CASE\n        WHEN lw.is_active = 1 AND fs.first_seen_month = lw.activity_month THEN 'new'\n        WHEN lw.is_active = 1 AND lw.was_active_last_month = 1 THEN 'retained'\n        WHEN lw.is_active = 1 AND lw.was_active_last_month = 0 AND last_active_before IS NOT NULL THEN 'resurrected'\n        WHEN lw.is_active = 0 AND lw.was_active_last_month = 1 THEN 'churned'\n    END AS user_status\nFROM lifecycle_window lw\nLEFT JOIN first_seen fs ON lw.user_id = fs.user_id\nWHERE user_status IS NOT NULL", "relation_name": "\"heymax\".\"main\".\"user_lifecycle_monthly\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.017504Z", "completed_at": "2025-06-21T11:02:09.021594Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.022060Z", "completed_at": "2025-06-21T11:02:09.022065Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005549907684326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.user_lifecycle_week", "compiled": true, "compiled_code": "\n\n\nWITH user_weeks AS (\n    SELECT DISTINCT user_id, activity_week\n    FROM \"heymax\".\"main\".\"fct_events\"\n),\n\n-- Get all unique weeks\nall_weeks AS (\n    SELECT DISTINCT activity_week\n    FROM \"heymax\".\"main\".\"fct_events\"\n),\n\n-- Cross join users \u00d7 weeks\nuser_week_matrix AS (\n    SELECT u.user_id, m.activity_week\n    FROM (SELECT DISTINCT user_id FROM \"heymax\".\"main\".\"fct_events\") u\n    CROSS JOIN all_weeks m\n),\n\n-- Flag user activity by week\nactivity_flags AS (\n    SELECT\n        umm.user_id,\n        umm.activity_week,\n        CASE\n            WHEN uma.user_id IS NOT NULL THEN 1 ELSE 0\n        END AS is_active\n    FROM user_week_matrix umm\n    LEFT JOIN user_weeks uma\n        ON umm.user_id = uma.user_id AND umm.activity_week = uma.activity_week\n),\n\n-- Add lagged state\nlifecycle_window AS (\n    SELECT *,\n        LAG(is_active) OVER (PARTITION BY user_id ORDER BY activity_week) AS was_active_last_week,\n        MAX(CASE WHEN is_active = 1 THEN activity_week ELSE NULL END) OVER (\n            PARTITION BY user_id ORDER BY activity_week ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING\n        ) AS last_active_before\n    FROM activity_flags\n),\n\n-- Bring in first seen week\nfirst_seen AS (\n    SELECT user_id, first_seen_week\n    FROM \"heymax\".\"main\".\"dim_users\"\n)\n\n-- Assign lifecycle label\nSELECT\n    lw.user_id,\n    lw.activity_week,\n    CASE\n        WHEN lw.is_active = 1 AND fs.first_seen_week = lw.activity_week THEN 'new'\n        WHEN lw.is_active = 1 AND lw.was_active_last_week = 1 THEN 'retained'\n        WHEN lw.is_active = 1 AND lw.was_active_last_week = 0 AND last_active_before IS NOT NULL THEN 'resurrected'\n        WHEN lw.is_active = 0 AND lw.was_active_last_week = 1 THEN 'churned'\n    END AS user_status\nFROM lifecycle_window lw\nLEFT JOIN first_seen fs ON lw.user_id = fs.user_id\nWHERE user_status IS NOT NULL", "relation_name": "\"heymax\".\"main\".\"user_lifecycle_week\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.024326Z", "completed_at": "2025-06-21T11:02:09.028283Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.028724Z", "completed_at": "2025-06-21T11:02:09.028730Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005405902862548828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_fct_events_activity_month.05cc8864fe", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_month\nfrom \"heymax\".\"main\".\"fct_events\"\nwhere activity_month is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.030849Z", "completed_at": "2025-06-21T11:02:09.034695Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.035195Z", "completed_at": "2025-06-21T11:02:09.035201Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005316495895385742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_fct_events_event_ts.e1213e19a4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_ts\nfrom \"heymax\".\"main\".\"fct_events\"\nwhere event_ts is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.037277Z", "completed_at": "2025-06-21T11:02:09.041070Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.041518Z", "completed_at": "2025-06-21T11:02:09.041523Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0052089691162109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_fct_events_event_type.6d7ec5220c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect event_type\nfrom \"heymax\".\"main\".\"fct_events\"\nwhere event_type is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.043593Z", "completed_at": "2025-06-21T11:02:09.047601Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.048167Z", "completed_at": "2025-06-21T11:02:09.048172Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005545616149902344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_fct_events_user_id.4974a207cd", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"heymax\".\"main\".\"fct_events\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.050320Z", "completed_at": "2025-06-21T11:02:09.054417Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.054864Z", "completed_at": "2025-06-21T11:02:09.054870Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005532979965209961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_retention_triangle_daily_cohort_date.a68f346160", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cohort_date\nfrom \"heymax\".\"main\".\"retention_triangle_daily\"\nwhere cohort_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.057277Z", "completed_at": "2025-06-21T11:02:09.061143Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.061580Z", "completed_at": "2025-06-21T11:02:09.061586Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00531458854675293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.unique_retention_triangle_daily_cohort_date.5f4ec6cfe8", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    cohort_date as unique_field,\n    count(*) as n_records\n\nfrom \"heymax\".\"main\".\"retention_triangle_daily\"\nwhere cohort_date is not null\ngroup by cohort_date\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.063808Z", "completed_at": "2025-06-21T11:02:09.067872Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.068338Z", "completed_at": "2025-06-21T11:02:09.068344Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005599260330200195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_retention_triangle_monthly_cohort_month.63c8e1f90d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cohort_month\nfrom \"heymax\".\"main\".\"retention_triangle_monthly\"\nwhere cohort_month is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.070490Z", "completed_at": "2025-06-21T11:02:09.074360Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.074801Z", "completed_at": "2025-06-21T11:02:09.074807Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005323648452758789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.unique_retention_triangle_monthly_cohort_month.c40561fbd5", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    cohort_month as unique_field,\n    count(*) as n_records\n\nfrom \"heymax\".\"main\".\"retention_triangle_monthly\"\nwhere cohort_month is not null\ngroup by cohort_month\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.076917Z", "completed_at": "2025-06-21T11:02:09.083428Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.083880Z", "completed_at": "2025-06-21T11:02:09.083887Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007960081100463867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_retention_triangle_week_cohort_week.4615a9eab4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect cohort_week\nfrom \"heymax\".\"main\".\"retention_triangle_week\"\nwhere cohort_week is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.086053Z", "completed_at": "2025-06-21T11:02:09.089890Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.090353Z", "completed_at": "2025-06-21T11:02:09.090360Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0053102970123291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.unique_retention_triangle_week_cohort_week.924606c0e0", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    cohort_week as unique_field,\n    count(*) as n_records\n\nfrom \"heymax\".\"main\".\"retention_triangle_week\"\nwhere cohort_week is not null\ngroup by cohort_week\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.092632Z", "completed_at": "2025-06-21T11:02:09.096222Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.096788Z", "completed_at": "2025-06-21T11:02:09.096799Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005218505859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.growth_metrics_daily", "compiled": true, "compiled_code": "\n\nWITH metrics AS (\n    SELECT\n        activity_date,\n        COUNT_IF(user_status = 'new') AS new_users,\n        COUNT_IF(user_status = 'retained') AS retained_users,\n        COUNT_IF(user_status = 'resurrected') AS resurrected_users,\n        COUNT_IF(user_status = 'churned') AS churned_users,\n        COUNT_IF(user_status IN ('new', 'retained', 'resurrected')) AS active_users\n    FROM \"heymax\".\"main\".\"user_lifecycle_daily\"\n    GROUP BY activity_date\n),\n\n-- Add lag to compute retention rate\nwith_lagged AS (\n    SELECT\n        m.*,\n        LAG(active_users) OVER (ORDER BY activity_date) AS active_users_last_date\n    FROM metrics m\n)\n\nSELECT\n    activity_date,\n    new_users,\n    retained_users,\n    resurrected_users,\n    churned_users,\n    active_users,\n\n    -- Retention rate = retained / previous active users\n    CASE\n        WHEN active_users_last_date = 0 THEN NULL\n        ELSE retained_users * 1.0 / active_users_last_date\n    END AS retention_rate,\n\n    -- Quick ratio = (new + resurrected) / churned\n    CASE\n        WHEN churned_users = 0 THEN NULL\n        ELSE (new_users + resurrected_users) * 1.0 / churned_users\n    END AS quick_ratio\n\nFROM with_lagged\nORDER BY activity_date", "relation_name": "\"heymax\".\"main\".\"growth_metrics_daily\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.099273Z", "completed_at": "2025-06-21T11:02:09.108941Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.109418Z", "completed_at": "2025-06-21T11:02:09.109426Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011262655258178711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.accepted_values_user_lifecycle_daily_user_status__new__retained__resurrected__churned.bc13a0a6d4", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        user_status as value_field,\n        count(*) as n_records\n\n    from \"heymax\".\"main\".\"user_lifecycle_daily\"\n    group by user_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'new','retained','resurrected','churned'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.111640Z", "completed_at": "2025-06-21T11:02:09.115853Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.116320Z", "completed_at": "2025-06-21T11:02:09.116327Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0056989192962646484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_daily_activity_date.2e71a59a04", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_date\nfrom \"heymax\".\"main\".\"user_lifecycle_daily\"\nwhere activity_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.118508Z", "completed_at": "2025-06-21T11:02:09.122466Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.122904Z", "completed_at": "2025-06-21T11:02:09.122910Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005463838577270508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_daily_user_id.b72d573c7c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"heymax\".\"main\".\"user_lifecycle_daily\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.125060Z", "completed_at": "2025-06-21T11:02:09.129269Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.129719Z", "completed_at": "2025-06-21T11:02:09.129726Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00567317008972168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_daily_user_status.8acd3a1e58", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_status\nfrom \"heymax\".\"main\".\"user_lifecycle_daily\"\nwhere user_status is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.131862Z", "completed_at": "2025-06-21T11:02:09.134787Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.135240Z", "completed_at": "2025-06-21T11:02:09.135245Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004373073577880859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.growth_metrics_monthly", "compiled": true, "compiled_code": "\n\n\nWITH metrics AS (\n    SELECT\n        activity_month,\n        COUNT_IF(user_status = 'new') AS new_users,\n        COUNT_IF(user_status = 'retained') AS retained_users,\n        COUNT_IF(user_status = 'resurrected') AS resurrected_users,\n        COUNT_IF(user_status = 'churned') AS churned_users,\n        COUNT_IF(user_status IN ('new', 'retained', 'resurrected')) AS active_users\n    FROM \"heymax\".\"main\".\"user_lifecycle_monthly\"\n    GROUP BY activity_month\n),\n\n-- Add lag to compute retention rate\nwith_lagged AS (\n    SELECT\n        m.*,\n        LAG(active_users) OVER (ORDER BY activity_month) AS active_users_last_month\n    FROM metrics m\n)\n\nSELECT\n    activity_month,\n    new_users,\n    retained_users,\n    resurrected_users,\n    churned_users,\n    active_users,\n\n    -- Retention rate = retained / previous active users\n    CASE\n        WHEN active_users_last_month = 0 THEN NULL\n        ELSE retained_users * 1.0 / active_users_last_month\n    END AS retention_rate,\n\n    -- Quick ratio = (new + resurrected) / churned\n    CASE\n        WHEN churned_users = 0 THEN NULL\n        ELSE (new_users + resurrected_users) * 1.0 / churned_users\n    END AS quick_ratio\n\nFROM with_lagged\nORDER BY activity_month", "relation_name": "\"heymax\".\"main\".\"growth_metrics_monthly\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.137460Z", "completed_at": "2025-06-21T11:02:09.141520Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.141963Z", "completed_at": "2025-06-21T11:02:09.141968Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005494832992553711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.accepted_values_user_lifecycle_monthly_user_status__new__retained__resurrected__churned.01b3a681fe", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        user_status as value_field,\n        count(*) as n_records\n\n    from \"heymax\".\"main\".\"user_lifecycle_monthly\"\n    group by user_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'new','retained','resurrected','churned'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.144071Z", "completed_at": "2025-06-21T11:02:09.147855Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.148314Z", "completed_at": "2025-06-21T11:02:09.148320Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005221128463745117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_monthly_activity_month.fdc43f3f94", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_month\nfrom \"heymax\".\"main\".\"user_lifecycle_monthly\"\nwhere activity_month is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.150404Z", "completed_at": "2025-06-21T11:02:09.154259Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.154697Z", "completed_at": "2025-06-21T11:02:09.154703Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005269050598144531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_monthly_user_id.d5fd2c8fd5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"heymax\".\"main\".\"user_lifecycle_monthly\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.156775Z", "completed_at": "2025-06-21T11:02:09.162444Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.162876Z", "completed_at": "2025-06-21T11:02:09.162881Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007076263427734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_monthly_user_status.50fb109ddf", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_status\nfrom \"heymax\".\"main\".\"user_lifecycle_monthly\"\nwhere user_status is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.164936Z", "completed_at": "2025-06-21T11:02:09.222385Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.222890Z", "completed_at": "2025-06-21T11:02:09.222897Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05896472930908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.heymax_analytics.growth_metrics_week", "compiled": true, "compiled_code": "\n\n\nWITH metrics AS (\n    SELECT\n        activity_week,\n        COUNT_IF(user_status = 'new') AS new_users,\n        COUNT_IF(user_status = 'retained') AS retained_users,\n        COUNT_IF(user_status = 'resurrected') AS resurrected_users,\n        COUNT_IF(user_status = 'churned') AS churned_users,\n        COUNT_IF(user_status IN ('new', 'retained', 'resurrected')) AS active_users\n    FROM \"heymax\".\"main\".\"user_lifecycle_week\"\n    GROUP BY activity_week\n),\n\n-- Add lag to compute retention rate\nwith_lagged AS (\n    SELECT\n        m.*,\n        LAG(active_users) OVER (ORDER BY activity_week) AS active_users_last_week\n    FROM metrics m\n)\n\nSELECT\n    activity_week,\n    new_users,\n    retained_users,\n    resurrected_users,\n    churned_users,\n    active_users,\n\n    -- Retention rate = retained / previous active users\n    CASE\n        WHEN active_users_last_week = 0 THEN NULL\n        ELSE retained_users * 1.0 / active_users_last_week\n    END AS retention_rate,\n\n    -- Quick ratio = (new + resurrected) / churned\n    CASE\n        WHEN churned_users = 0 THEN NULL\n        ELSE (new_users + resurrected_users) * 1.0 / churned_users\n    END AS quick_ratio\n\nFROM with_lagged\nORDER BY activity_week", "relation_name": "\"heymax\".\"main\".\"growth_metrics_week\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.225317Z", "completed_at": "2025-06-21T11:02:09.229739Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.230224Z", "completed_at": "2025-06-21T11:02:09.230231Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006118297576904297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.accepted_values_user_lifecycle_week_user_status__new__retained__resurrected__churned.fc713538b6", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        user_status as value_field,\n        count(*) as n_records\n\n    from \"heymax\".\"main\".\"user_lifecycle_week\"\n    group by user_status\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'new','retained','resurrected','churned'\n)\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.232432Z", "completed_at": "2025-06-21T11:02:09.236531Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.236991Z", "completed_at": "2025-06-21T11:02:09.236998Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005597114562988281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_week_activity_week.bf742d6371", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_week\nfrom \"heymax\".\"main\".\"user_lifecycle_week\"\nwhere activity_week is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.239244Z", "completed_at": "2025-06-21T11:02:09.243213Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.243668Z", "completed_at": "2025-06-21T11:02:09.243674Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0054438114166259766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_week_user_id.6db8145058", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"heymax\".\"main\".\"user_lifecycle_week\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.245963Z", "completed_at": "2025-06-21T11:02:09.250080Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.250541Z", "completed_at": "2025-06-21T11:02:09.250546Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00576329231262207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_user_lifecycle_week_user_status.37f532b99f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_status\nfrom \"heymax\".\"main\".\"user_lifecycle_week\"\nwhere user_status is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.252729Z", "completed_at": "2025-06-21T11:02:09.256806Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.257274Z", "completed_at": "2025-06-21T11:02:09.257281Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0055751800537109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_growth_metrics_daily_activity_date.8596682f98", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_date\nfrom \"heymax\".\"main\".\"growth_metrics_daily\"\nwhere activity_date is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.259402Z", "completed_at": "2025-06-21T11:02:09.263600Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.264076Z", "completed_at": "2025-06-21T11:02:09.264084Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005740642547607422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.unique_growth_metrics_daily_activity_date.0668564552", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    activity_date as unique_field,\n    count(*) as n_records\n\nfrom \"heymax\".\"main\".\"growth_metrics_daily\"\nwhere activity_date is not null\ngroup by activity_date\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.266258Z", "completed_at": "2025-06-21T11:02:09.270282Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.270733Z", "completed_at": "2025-06-21T11:02:09.270739Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005480766296386719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_growth_metrics_monthly_activity_month.fafe41103e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_month\nfrom \"heymax\".\"main\".\"growth_metrics_monthly\"\nwhere activity_month is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.272857Z", "completed_at": "2025-06-21T11:02:09.276619Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.277086Z", "completed_at": "2025-06-21T11:02:09.277092Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0052149295806884766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.unique_growth_metrics_monthly_activity_month.989c04fb77", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    activity_month as unique_field,\n    count(*) as n_records\n\nfrom \"heymax\".\"main\".\"growth_metrics_monthly\"\nwhere activity_month is not null\ngroup by activity_month\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.279186Z", "completed_at": "2025-06-21T11:02:09.283060Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.283521Z", "completed_at": "2025-06-21T11:02:09.283528Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005327939987182617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.not_null_growth_metrics_week_activity_week.c92f568e72", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect activity_week\nfrom \"heymax\".\"main\".\"growth_metrics_week\"\nwhere activity_week is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-21T11:02:09.285650Z", "completed_at": "2025-06-21T11:02:09.289330Z"}, {"name": "execute", "started_at": "2025-06-21T11:02:09.289767Z", "completed_at": "2025-06-21T11:02:09.289772Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0051097869873046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.heymax_analytics.unique_growth_metrics_week_activity_week.69f878f821", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    activity_week as unique_field,\n    count(*) as n_records\n\nfrom \"heymax\".\"main\".\"growth_metrics_week\"\nwhere activity_week is not null\ngroup by activity_week\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 0.6849284172058105, "args": {"strict_mode": false, "log_level_file": "debug", "macro_debugging": false, "source_freshness_run_project_hooks": false, "warn_error_options": {"include": [], "exclude": []}, "favor_state": false, "quiet": false, "static_parser": true, "log_format_file": "debug", "printer_width": 80, "defer": false, "write_json": true, "exclude": [], "cache_selected_only": false, "introspect": true, "which": "generate", "require_explicit_package_overrides_for_builtin_materializations": true, "use_colors_file": true, "project_dir": "/home/runner/work/heymax-analytics/heymax-analytics/heymax_analytics", "select": [], "compile": true, "empty_catalog": false, "profiles_dir": ".", "log_format": "default", "version_check": true, "partial_parse_file_diff": true, "use_colors": true, "partial_parse": true, "show_resource_report": false, "enable_legacy_logger": false, "static": false, "log_path": "/home/runner/work/heymax-analytics/heymax-analytics/heymax_analytics/logs", "vars": {}, "populate_cache": true, "log_level": "info", "require_resource_names_without_spaces": false, "send_anonymous_usage_stats": true, "print": true, "indirect_selection": "eager", "invocation_command": "dbt docs generate --profiles-dir .", "log_file_max_bytes": 10485760}}